<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lb.mobile.dao.commentPoMapper">
  <resultMap id="BaseResultMap" type="com.lb.mobile.entity.commentPo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lb.mobile.entity.commentPo">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, post_id, is_enable, create_date, remark
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lb.mobile.entity.commentPo" useGeneratedKeys="true">
    insert into t_comment (id,uid, post_id, is_enable,
      create_date, remark, comment
      )
    values (#{id,jdbcType=VARCHAR},#{uid,jdbcType=VARCHAR}, #{postId,jdbcType=INTEGER}, #{isEnable,jdbcType=INTEGER},
      #{createDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lb.mobile.entity.commentPo" useGeneratedKeys="true">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
            id,
        </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
        <if test="uid != null">
            #{uid,jdbcType=VARCHAR},
        </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lb.mobile.entity.commentPo">
    update t_comment
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lb.mobile.entity.commentPo">
    update t_comment
    set uid = #{uid,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lb.mobile.entity.commentPo">
    update t_comment
    set uid = #{uid,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectCommentInfosByMap" parameterType="java.util.Map" resultType="com.lb.mobile.dto.response.CommentDto">
        SELECT
            u.nick_name nickName,
            u.ctm_name ctmName,
            u.head_url headUrl,
            f.file_url fileUrl,
            c.uid commentUid,
            c.comment ctMsg,
            c.create_date commentDate
        FROM
            t_comment c
            LEFT JOIN t_user u  on c.uid = u.uid
            LEFT JOIN t_file f on c.uid = f.uid  and f.file_type = 4 and f.is_enable=0
		where 1=1
        <if test="postId != null">
            and c.post_id = #{postId,jdbcType=INTEGER}
        </if>
         ORDER BY c.create_date DESC
        <if test="limit != null">
            limit  #{limit,jdbcType=INTEGER}
        </if>
    </select>
</mapper>